import { GiveawayManager, GiveawayCreateData, GiveawayData } from './GiveawayManager';
import { Language } from 'klasa';
import { Message, TextChannel, Client, GuildMember, MessageBuilder } from '@klasa/core';
import { GiveawayOptions } from '../..';
export declare type GiveawayState = 'CREATING' | 'RUNNING' | 'ENDING' | 'FINISHED';
export declare class Giveaway {
    readonly manager: GiveawayManager;
    endsAt: number;
    startAt: number;
    lastRefresh: number;
    winnerCount: number;
    title: string;
    messageID?: string;
    channelID?: string;
    guildID?: string;
    author?: string;
    message: Message | null;
    state: GiveawayState;
    reaction: string;
    constructor(manager: GiveawayManager, data: GiveawayCreateData | GiveawayData);
    get client(): Client;
    get options(): GiveawayOptions;
    get refreshAt(): number;
    get duration(): number;
    get data(): GiveawayCreateData;
    renderMessage(lang: Language): ((arg0: MessageBuilder) => MessageBuilder) | undefined;
    finishMessage(winners: GuildMember[], msg: Message): Promise<any>;
    init(): Promise<void>;
    create(channel?: TextChannel): Promise<this>;
    update(): Promise<Message | unknown>;
    finish(): Promise<unknown>;
    private fetchMessage;
}
